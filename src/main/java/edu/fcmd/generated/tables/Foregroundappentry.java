/*
 * This file is generated by jOOQ.
*/
package edu.fcmd.generated.tables;


import edu.fcmd.generated.Keys;
import edu.fcmd.generated.MadcapP;
import edu.fcmd.generated.tables.records.ForegroundappentryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Foregroundappentry extends TableImpl<ForegroundappentryRecord> {

    private static final long serialVersionUID = -1251420914;

    /**
     * The reference instance of <code>madcap_p.foregroundappentry</code>
     */
    public static final Foregroundappentry FOREGROUNDAPPENTRY = new Foregroundappentry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ForegroundappentryRecord> getRecordType() {
        return ForegroundappentryRecord.class;
    }

    /**
     * The column <code>madcap_p.foregroundappentry.NAMEID</code>.
     */
    public final TableField<ForegroundappentryRecord, String> NAMEID = createField("NAMEID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>madcap_p.foregroundappentry.ACCURACY</code>.
     */
    public final TableField<ForegroundappentryRecord, Integer> ACCURACY = createField("ACCURACY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>madcap_p.foregroundappentry.APPPACKAGE</code>.
     */
    public final TableField<ForegroundappentryRecord, String> APPPACKAGE = createField("APPPACKAGE", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>madcap_p.foregroundappentry.TIME_STAMP</code>.
     */
    public final TableField<ForegroundappentryRecord, Timestamp> TIME_STAMP = createField("TIME_STAMP", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>madcap_p.foregroundappentry.USERID</code>.
     */
    public final TableField<ForegroundappentryRecord, String> USERID = createField("USERID", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

    /**
     * The column <code>madcap_p.foregroundappentry.EVENTTYPE</code>.
     */
    public final TableField<ForegroundappentryRecord, String> EVENTTYPE = createField("EVENTTYPE", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

    /**
     * Create a <code>madcap_p.foregroundappentry</code> table reference
     */
    public Foregroundappentry() {
        this("foregroundappentry", null);
    }

    /**
     * Create an aliased <code>madcap_p.foregroundappentry</code> table reference
     */
    public Foregroundappentry(String alias) {
        this(alias, FOREGROUNDAPPENTRY);
    }

    private Foregroundappentry(String alias, Table<ForegroundappentryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Foregroundappentry(String alias, Table<ForegroundappentryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MadcapP.MADCAP_P;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ForegroundappentryRecord> getPrimaryKey() {
        return Keys.KEY_FOREGROUNDAPPENTRY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ForegroundappentryRecord>> getKeys() {
        return Arrays.<UniqueKey<ForegroundappentryRecord>>asList(Keys.KEY_FOREGROUNDAPPENTRY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Foregroundappentry as(String alias) {
        return new Foregroundappentry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Foregroundappentry rename(String name) {
        return new Foregroundappentry(name, null);
    }
}
