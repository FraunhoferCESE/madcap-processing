/*
 * This file is generated by jOOQ.
*/
package edu.fcmd.generated.tables;


import edu.fcmd.generated.Keys;
import edu.fcmd.generated.Madcap;
import edu.fcmd.generated.tables.records.AppinfotableRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Appinfotable extends TableImpl<AppinfotableRecord> {

    private static final long serialVersionUID = -950244948;

    /**
     * The reference instance of <code>madcap.appinfotable</code>
     */
    public static final Appinfotable APPINFOTABLE = new Appinfotable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppinfotableRecord> getRecordType() {
        return AppinfotableRecord.class;
    }

    /**
     * The column <code>madcap.appinfotable.PACKAGE_NAME</code>.
     */
    public final TableField<AppinfotableRecord, String> PACKAGE_NAME = createField("PACKAGE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>madcap.appinfotable.APP_NAME</code>.
     */
    public final TableField<AppinfotableRecord, String> APP_NAME = createField("APP_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>madcap.appinfotable.CATEGORY</code>.
     */
    public final TableField<AppinfotableRecord, String> CATEGORY = createField("CATEGORY", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>madcap.appinfotable.DEVELOPER</code>.
     */
    public final TableField<AppinfotableRecord, String> DEVELOPER = createField("DEVELOPER", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * Create a <code>madcap.appinfotable</code> table reference
     */
    public Appinfotable() {
        this("appinfotable", null);
    }

    /**
     * Create an aliased <code>madcap.appinfotable</code> table reference
     */
    public Appinfotable(String alias) {
        this(alias, APPINFOTABLE);
    }

    private Appinfotable(String alias, Table<AppinfotableRecord> aliased) {
        this(alias, aliased, null);
    }

    private Appinfotable(String alias, Table<AppinfotableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Madcap.MADCAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AppinfotableRecord> getPrimaryKey() {
        return Keys.KEY_APPINFOTABLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AppinfotableRecord>> getKeys() {
        return Arrays.<UniqueKey<AppinfotableRecord>>asList(Keys.KEY_APPINFOTABLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Appinfotable as(String alias) {
        return new Appinfotable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Appinfotable rename(String name) {
        return new Appinfotable(name, null);
    }
}
